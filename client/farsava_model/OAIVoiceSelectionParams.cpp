/**
 * Farsava API
 * Farsava API. Speech Recognition and Text to Speech by applying powerful deep neural network models.
 *
 * OpenAPI spec version: 1.0.5
 * Contact: amir@amerandish.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIVoiceSelectionParams.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Farsava {

OAIVoiceSelectionParams::OAIVoiceSelectionParams(QString json) {
    this->init();
    this->fromJson(json);
}

OAIVoiceSelectionParams::OAIVoiceSelectionParams() {
    this->init();
}

OAIVoiceSelectionParams::~OAIVoiceSelectionParams() {

}

void
OAIVoiceSelectionParams::init() {
    
    m_voice_id_isSet = false;
    m_voice_id_isValid = false;
    
    m_language_code_isSet = false;
    m_language_code_isValid = false;
    
    m_name_isSet = false;
    m_name_isValid = false;
    
    m_gender_isSet = false;
    m_gender_isValid = false;
    }

void
OAIVoiceSelectionParams::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIVoiceSelectionParams::fromJsonObject(QJsonObject json) {
    
    m_voice_id_isValid = ::Farsava::fromJsonValue(voice_id, json[QString("voiceId")]);
    
    
    m_language_code_isValid = ::Farsava::fromJsonValue(language_code, json[QString("languageCode")]);
    
    
    m_name_isValid = ::Farsava::fromJsonValue(name, json[QString("name")]);
    
    
    m_gender_isValid = ::Farsava::fromJsonValue(gender, json[QString("gender")]);
    
    
}

QString
OAIVoiceSelectionParams::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIVoiceSelectionParams::asJsonObject() const {
    QJsonObject obj;
	if(m_voice_id_isSet){
        obj.insert(QString("voiceId"), ::Farsava::toJsonValue(voice_id));
    }
	if(language_code.isSet()){
        obj.insert(QString("languageCode"), ::Farsava::toJsonValue(language_code));
    }
	if(m_name_isSet){
        obj.insert(QString("name"), ::Farsava::toJsonValue(name));
    }
	if(gender.isSet()){
        obj.insert(QString("gender"), ::Farsava::toJsonValue(gender));
    }
    return obj;
}


QString
OAIVoiceSelectionParams::getVoiceId() const {
    return voice_id;
}
void
OAIVoiceSelectionParams::setVoiceId(const QString &voice_id) {
    this->voice_id = voice_id;
    this->m_voice_id_isSet = true;
}


OAILanguageCode
OAIVoiceSelectionParams::getLanguageCode() const {
    return language_code;
}
void
OAIVoiceSelectionParams::setLanguageCode(const OAILanguageCode &language_code) {
    this->language_code = language_code;
    this->m_language_code_isSet = true;
}


QString
OAIVoiceSelectionParams::getName() const {
    return name;
}
void
OAIVoiceSelectionParams::setName(const QString &name) {
    this->name = name;
    this->m_name_isSet = true;
}


OAITTSVoiceGender
OAIVoiceSelectionParams::getGender() const {
    return gender;
}
void
OAIVoiceSelectionParams::setGender(const OAITTSVoiceGender &gender) {
    this->gender = gender;
    this->m_gender_isSet = true;
}

bool
OAIVoiceSelectionParams::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(m_voice_id_isSet){ isObjectUpdated = true; break;}
    
        if(language_code.isSet()){ isObjectUpdated = true; break;}
    
        if(m_name_isSet){ isObjectUpdated = true; break;}
    
        if(gender.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

bool
OAIVoiceSelectionParams::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_voice_id_isValid && true;
}

}

