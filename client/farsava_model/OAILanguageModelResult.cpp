/**
 * Farsava API
 * Farsava API. Speech Recognition and Text to Speech by applying powerful deep neural network models.
 *
 * OpenAPI spec version: 1.0.5
 * Contact: amir@amerandish.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAILanguageModelResult.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Farsava {

OAILanguageModelResult::OAILanguageModelResult(QString json) {
    this->init();
    this->fromJson(json);
}

OAILanguageModelResult::OAILanguageModelResult() {
    this->init();
}

OAILanguageModelResult::~OAILanguageModelResult() {

}

void
OAILanguageModelResult::init() {
    
    m_language_model_id_isSet = false;
    m_language_model_id_isValid = false;
    
    m_name_isSet = false;
    m_name_isValid = false;
    
    m_status_isSet = false;
    m_status_isValid = false;
    }

void
OAILanguageModelResult::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAILanguageModelResult::fromJsonObject(QJsonObject json) {
    
    m_language_model_id_isValid = ::Farsava::fromJsonValue(language_model_id, json[QString("languageModelId")]);
    
    
    m_name_isValid = ::Farsava::fromJsonValue(name, json[QString("name")]);
    
    
    m_status_isValid = ::Farsava::fromJsonValue(status, json[QString("status")]);
    
    
}

QString
OAILanguageModelResult::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAILanguageModelResult::asJsonObject() const {
    QJsonObject obj;
	if(m_language_model_id_isSet){
        obj.insert(QString("languageModelId"), ::Farsava::toJsonValue(language_model_id));
    }
	if(m_name_isSet){
        obj.insert(QString("name"), ::Farsava::toJsonValue(name));
    }
	if(status.isSet()){
        obj.insert(QString("status"), ::Farsava::toJsonValue(status));
    }
    return obj;
}


QString
OAILanguageModelResult::getLanguageModelId() const {
    return language_model_id;
}
void
OAILanguageModelResult::setLanguageModelId(const QString &language_model_id) {
    this->language_model_id = language_model_id;
    this->m_language_model_id_isSet = true;
}


QString
OAILanguageModelResult::getName() const {
    return name;
}
void
OAILanguageModelResult::setName(const QString &name) {
    this->name = name;
    this->m_name_isSet = true;
}


OAILMStatus
OAILanguageModelResult::getStatus() const {
    return status;
}
void
OAILanguageModelResult::setStatus(const OAILMStatus &status) {
    this->status = status;
    this->m_status_isSet = true;
}

bool
OAILanguageModelResult::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(m_language_model_id_isSet){ isObjectUpdated = true; break;}
    
        if(m_name_isSet){ isObjectUpdated = true; break;}
    
        if(status.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

bool
OAILanguageModelResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

}

