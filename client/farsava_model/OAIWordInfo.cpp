/**
 * Farsava API
 * Farsava API. Speech Recognition and Text to Speech by applying powerful deep neural network models.
 *
 * OpenAPI spec version: 1.0.5
 * Contact: amir@amerandish.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIWordInfo.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Farsava {

OAIWordInfo::OAIWordInfo(QString json) {
    this->init();
    this->fromJson(json);
}

OAIWordInfo::OAIWordInfo() {
    this->init();
}

OAIWordInfo::~OAIWordInfo() {

}

void
OAIWordInfo::init() {
    
    m_start_time_isSet = false;
    m_start_time_isValid = false;
    
    m_end_time_isSet = false;
    m_end_time_isValid = false;
    
    m_word_isSet = false;
    m_word_isValid = false;
    
    m_confidence_isSet = false;
    m_confidence_isValid = false;
    }

void
OAIWordInfo::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIWordInfo::fromJsonObject(QJsonObject json) {
    
    m_start_time_isValid = ::Farsava::fromJsonValue(start_time, json[QString("startTime")]);
    
    
    m_end_time_isValid = ::Farsava::fromJsonValue(end_time, json[QString("endTime")]);
    
    
    m_word_isValid = ::Farsava::fromJsonValue(word, json[QString("word")]);
    
    
    m_confidence_isValid = ::Farsava::fromJsonValue(confidence, json[QString("confidence")]);
    
    
}

QString
OAIWordInfo::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIWordInfo::asJsonObject() const {
    QJsonObject obj;
	if(m_start_time_isSet){
        obj.insert(QString("startTime"), ::Farsava::toJsonValue(start_time));
    }
	if(m_end_time_isSet){
        obj.insert(QString("endTime"), ::Farsava::toJsonValue(end_time));
    }
	if(m_word_isSet){
        obj.insert(QString("word"), ::Farsava::toJsonValue(word));
    }
	if(m_confidence_isSet){
        obj.insert(QString("confidence"), ::Farsava::toJsonValue(confidence));
    }
    return obj;
}


double
OAIWordInfo::getStartTime() const {
    return start_time;
}
void
OAIWordInfo::setStartTime(const double &start_time) {
    this->start_time = start_time;
    this->m_start_time_isSet = true;
}


double
OAIWordInfo::getEndTime() const {
    return end_time;
}
void
OAIWordInfo::setEndTime(const double &end_time) {
    this->end_time = end_time;
    this->m_end_time_isSet = true;
}


QString
OAIWordInfo::getWord() const {
    return word;
}
void
OAIWordInfo::setWord(const QString &word) {
    this->word = word;
    this->m_word_isSet = true;
}


double
OAIWordInfo::getConfidence() const {
    return confidence;
}
void
OAIWordInfo::setConfidence(const double &confidence) {
    this->confidence = confidence;
    this->m_confidence_isSet = true;
}

bool
OAIWordInfo::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(m_start_time_isSet){ isObjectUpdated = true; break;}
    
        if(m_end_time_isSet){ isObjectUpdated = true; break;}
    
        if(m_word_isSet){ isObjectUpdated = true; break;}
    
        if(m_confidence_isSet){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

bool
OAIWordInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

}

