/**
 * Farsava API
 * Farsava API. Speech Recognition and Text to Speech by applying powerful deep neural network models.
 *
 * OpenAPI spec version: 1.0.5
 * Contact: amir@amerandish.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAIASRRequestBodyURI.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Farsava {

OAIASRRequestBodyURI::OAIASRRequestBodyURI(QString json) {
    this->init();
    this->fromJson(json);
}

OAIASRRequestBodyURI::OAIASRRequestBodyURI() {
    this->init();
}

OAIASRRequestBodyURI::~OAIASRRequestBodyURI() {

}

void
OAIASRRequestBodyURI::init() {
    
    m_config_isSet = false;
    m_config_isValid = false;
    
    m_audio_isSet = false;
    m_audio_isValid = false;
    }

void
OAIASRRequestBodyURI::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAIASRRequestBodyURI::fromJsonObject(QJsonObject json) {
    
    m_config_isValid = ::Farsava::fromJsonValue(config, json[QString("config")]);
    
    
    m_audio_isValid = ::Farsava::fromJsonValue(audio, json[QString("audio")]);
    
    
}

QString
OAIASRRequestBodyURI::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAIASRRequestBodyURI::asJsonObject() const {
    QJsonObject obj;
	if(config.isSet()){
        obj.insert(QString("config"), ::Farsava::toJsonValue(config));
    }
	if(audio.isSet()){
        obj.insert(QString("audio"), ::Farsava::toJsonValue(audio));
    }
    return obj;
}


OAIRecognitionConfig
OAIASRRequestBodyURI::getConfig() const {
    return config;
}
void
OAIASRRequestBodyURI::setConfig(const OAIRecognitionConfig &config) {
    this->config = config;
    this->m_config_isSet = true;
}


OAIRecognitionAudioURI
OAIASRRequestBodyURI::getAudio() const {
    return audio;
}
void
OAIASRRequestBodyURI::setAudio(const OAIRecognitionAudioURI &audio) {
    this->audio = audio;
    this->m_audio_isSet = true;
}

bool
OAIASRRequestBodyURI::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(config.isSet()){ isObjectUpdated = true; break;}
    
        if(audio.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

bool
OAIASRRequestBodyURI::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_config_isValid && m_audio_isValid && true;
}

}

