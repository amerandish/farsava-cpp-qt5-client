/**
 * Farsava API
 * Farsava API. Speech Recognition and Text to Speech by applying powerful deep neural network models.
 *
 * OpenAPI spec version: 1.0.5
 * Contact: amir@amerandish.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


#include "OAITTSRequestBody.h"

#include "OAIHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Farsava {

OAITTSRequestBody::OAITTSRequestBody(QString json) {
    this->init();
    this->fromJson(json);
}

OAITTSRequestBody::OAITTSRequestBody() {
    this->init();
}

OAITTSRequestBody::~OAITTSRequestBody() {

}

void
OAITTSRequestBody::init() {
    
    m_synthesis_input_isSet = false;
    m_synthesis_input_isValid = false;
    
    m_voice_config_isSet = false;
    m_voice_config_isValid = false;
    
    m_audio_config_isSet = false;
    m_audio_config_isValid = false;
    }

void
OAITTSRequestBody::fromJson(QString jsonString) {
    QByteArray array (jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void
OAITTSRequestBody::fromJsonObject(QJsonObject json) {
    
    m_synthesis_input_isValid = ::Farsava::fromJsonValue(synthesis_input, json[QString("synthesisInput")]);
    
    
    m_voice_config_isValid = ::Farsava::fromJsonValue(voice_config, json[QString("voiceConfig")]);
    
    
    m_audio_config_isValid = ::Farsava::fromJsonValue(audio_config, json[QString("audioConfig")]);
    
    
}

QString
OAITTSRequestBody::asJson () const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject
OAITTSRequestBody::asJsonObject() const {
    QJsonObject obj;
	if(synthesis_input.isSet()){
        obj.insert(QString("synthesisInput"), ::Farsava::toJsonValue(synthesis_input));
    }
	if(voice_config.isSet()){
        obj.insert(QString("voiceConfig"), ::Farsava::toJsonValue(voice_config));
    }
	if(audio_config.isSet()){
        obj.insert(QString("audioConfig"), ::Farsava::toJsonValue(audio_config));
    }
    return obj;
}


OAISynthesisInput
OAITTSRequestBody::getSynthesisInput() const {
    return synthesis_input;
}
void
OAITTSRequestBody::setSynthesisInput(const OAISynthesisInput &synthesis_input) {
    this->synthesis_input = synthesis_input;
    this->m_synthesis_input_isSet = true;
}


OAIVoiceSelectionParams
OAITTSRequestBody::getVoiceConfig() const {
    return voice_config;
}
void
OAITTSRequestBody::setVoiceConfig(const OAIVoiceSelectionParams &voice_config) {
    this->voice_config = voice_config;
    this->m_voice_config_isSet = true;
}


OAITTSAudioConfig
OAITTSRequestBody::getAudioConfig() const {
    return audio_config;
}
void
OAITTSRequestBody::setAudioConfig(const OAITTSAudioConfig &audio_config) {
    this->audio_config = audio_config;
    this->m_audio_config_isSet = true;
}

bool
OAITTSRequestBody::isSet() const {
    bool isObjectUpdated = false;
    do{ 
        if(synthesis_input.isSet()){ isObjectUpdated = true; break;}
    
        if(voice_config.isSet()){ isObjectUpdated = true; break;}
    
        if(audio_config.isSet()){ isObjectUpdated = true; break;}
    }while(false);
    return isObjectUpdated;
}

bool
OAITTSRequestBody::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_synthesis_input_isValid && m_voice_config_isValid && m_audio_config_isValid && true;
}

}

