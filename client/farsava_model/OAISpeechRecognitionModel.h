/**
 * Farsava API
 * Farsava API. Speech Recognition and Text to Speech by applying powerful deep neural network models.
 *
 * OpenAPI spec version: 1.0.5
 * Contact: amir@amerandish.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISpeechRecognitionModel.h
 *
 * Optional Which model to select for the given request. Select the model best suited to your domain to get best results. If a model is not explicitly specified, then we auto-select a model based on the parameters in the RecognitionConfig.      Model | Description   ------------ | -------------   default | Best for audio that is not one of the specific audio models. For example, long-form audio. Ideally the audio is high-fidelity, recorded at a 16khz or greater sampling rate.   video | Best for audio that originated from from video or includes multiple speakers. Ideally the audio is recorded at a 16khz or greater sampling rate.   command_and_search | Best for short queries such as voice commands or voice search. To be released.   phone_call | Best for audio that originated from a phone call (typically recorded at an 8khz sampling rate). To be released. 
 */

#ifndef OAISpeechRecognitionModel_H
#define OAISpeechRecognitionModel_H

#include <QJsonObject>



#include "OAIObject.h"
#include "OAIEnum.h"

namespace Farsava {

class OAISpeechRecognitionModel: public OAIEnum {
public:
    OAISpeechRecognitionModel();
    OAISpeechRecognitionModel(QString json);
    ~OAISpeechRecognitionModel() override;

    QString asJson () const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    
    enum class eOAISpeechRecognitionModel {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        DEFAULT, 
        VIDEO, 
        COMMAND_AND_SEARCH, 
        PHONE_CALL
    };

    OAISpeechRecognitionModel::eOAISpeechRecognitionModel getValue() const;
    void setValue(const OAISpeechRecognitionModel::eOAISpeechRecognitionModel& value);
    
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void init();
    
    eOAISpeechRecognitionModel m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

}

#endif // OAISpeechRecognitionModel_H
